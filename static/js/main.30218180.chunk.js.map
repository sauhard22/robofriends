{"version":3,"sources":["components/Card.js","components/CardList.js","components/Searchbox.js","components/scroll.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","name","email","id","className","alt","src","CardList","robots","cardArray","map","user","i","Searchbox","searchChange","type","placeholder","onChange","Scroll","props","style","overflowY","border","height","children","App","onSearchChange","event","setState","searchfield","target","value","state","fetch","then","response","json","users","filteredRobots","this","filter","toLowerCase","includes","length","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"wOAoBeA,EAlBF,SAAC,GAAuB,IAAtBC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,MAAOC,EAAQ,EAARA,GAI3B,OACC,sBAAKC,UAAY,mDAAjB,UACC,qBAAKC,IAAM,SAASC,IAAG,+BAA0BH,EAA1B,aACvB,sBAAKC,UAAY,KAAjB,UAEA,6BAAKH,IAEL,4BAAIC,WCaQK,EAtBE,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAEbC,EAAYD,EAAOE,KAAI,SAACC,EAAMC,GACnC,OACA,cAAC,EAAD,CAEAT,GAAMK,EAAOI,GAAGT,GAChBF,KAAMO,EAAOI,GAAGX,KAChBC,MAAOM,EAAOI,GAAGV,OAHVU,MAQR,OAEA,8BACKH,KCHSI,EAfG,SAAC,GAAoB,IAAnBC,EAAkB,EAAlBA,aACnB,OAEC,qBAAKV,UAAU,MAAf,SACC,uBACAA,UAAU,mCACVW,KAAK,SACLC,YAAc,gBACdC,SAAYH,OCIAI,G,MAZA,SAACC,GAEf,OACC,qBAAKC,MAAO,CAACC,UAAW,SAAUC,OAAQ,kBAAmBC,OAAQ,SAArE,SAECJ,EAAMK,aCwDMC,E,kDArDd,aAAc,IAAD,8BAEZ,gBAgBDC,eAAiB,SAACC,GAEjB,EAAKC,SAAS,CAAEC,YAAcF,EAAMG,OAAOC,SAhB3C,EAAKC,MAAQ,CAEZxB,OAAO,GAEPqB,YAAa,IARF,E,qDAYb,WAAoB,IAAD,OAClBI,MAAM,8CACHC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKT,SAAS,CAAEpB,OAAQ6B,S,oBAY1C,WAAS,IAAD,OAEDC,EAAiBC,KAAKP,MAAMxB,OAAOgC,QAAO,SAAAhC,GAC/C,OAAOA,EAAOP,KAAKwC,cAAcC,SAAS,EAAKV,MAAMH,YAAYY,kBAGlE,OAAgC,IAA7BF,KAAKP,MAAMxB,OAAOmC,OACb,oBAAIvC,UAAY,QAAhB,wBAIN,sBAAKA,UAAY,KAAjB,UACA,oBAAIA,UAAY,KAAhB,yBACA,cAAC,EAAD,CAAWU,aAAgByB,KAAKb,iBAChC,cAAC,EAAD,UACA,cAAC,EAAD,CAAUlB,OAAW8B,a,GA5CPM,aCIHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBb,MAAK,YAAkD,IAA/Cc,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCIdO,IAASC,OACT,cAAC,EAAD,IACEC,SAASC,eAAe,SAM1BX,M","file":"static/js/main.30218180.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Card = ({name, email, id}) => {\r\n\r\n\t\r\n\r\n\treturn(\r\n\t\t<div className = 'bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5'>\r\n\t\t\t<img alt = 'robots' src={`https://robohash.org/${id}200x200`}/>\r\n\t\t\t<div className = 'tc'>\r\n\r\n\t\t\t<h2>{name}</h2>\r\n\r\n\t\t\t<p>{email}</p>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\r\n\t);\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport Card from './Card';\r\n\r\n\r\nconst CardList = ({ robots }) => {\r\n\r\n\tconst cardArray = robots.map((user, i) => {\r\n\t\treturn(\r\n\t\t<Card \r\n\t\tkey = {i} \r\n\t\tid = {robots[i].id} \r\n\t\tname={robots[i].name} \r\n\t\temail={robots[i].email}\r\n\t\t/>\r\n\t\t)\r\n\t})\r\n\r\n\treturn (\r\n\r\n\t<div>\r\n    \t{cardArray}\r\n \t</div>\r\n\t\r\n\t);\r\n}\r\n\r\nexport default CardList;","import React from 'react';\r\n\r\nconst Searchbox = ({searchChange}) => {\r\n\treturn(\r\n\t\t\r\n\t\t<div className='pa2'>\r\n\t\t\t<input\r\n\t\t\tclassName='pa3 ba b--green bg-lightest-blue' \r\n\t\t\ttype='search' \r\n\t\t\tplaceholder = 'search robots' \r\n\t\t\tonChange = {searchChange}\r\n\r\n\t\t\t/> \r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Searchbox;","import React from 'react';\r\n\r\nconst Scroll = (props) => {\r\n\r\n\treturn (\r\n\t\t<div style={{overflowY: 'scroll', border: '1px solid black', height: '800px'}}>\r\n\r\n\t\t{props.children}\r\n\r\n\t\t</div>\r\n\t);\r\n\r\n};\r\n\r\nexport default Scroll;","import React, {Component} from 'react';\r\nimport CardList from '../components/CardList';\r\n// import { robots } from '../components/robots';\r\nimport Searchbox from '../components/Searchbox';\r\nimport './App.css';\r\nimport Scroll from '../components/scroll';\r\n\r\n\r\nclass App extends Component {\r\n\r\n\tconstructor(){\r\n\r\n\t\tsuper()\r\n\r\n\t\tthis.state = {\r\n\t\t\t\r\n\t\t\trobots:[],\r\n\r\n\t\t\tsearchfield: ''\r\n\t\t}\r\n\t}\r\n\r\n\tcomponentDidMount(){\r\n\t\tfetch('https://jsonplaceholder.typicode.com/users')\r\n  \t\t.then(response => response.json())\r\n  \t\t.then(users => this.setState({ robots: users}));\r\n\t}\r\n\r\n\tonSearchChange = (event) => {\r\n\r\n\t\tthis.setState({ searchfield : event.target.value})\r\n\r\n\t\t\r\n\t}\r\n\r\n\r\n\r\n\trender(){\r\n\r\n\t\tconst filteredRobots = this.state.robots.filter(robots =>{\r\n\t\t\treturn robots.name.toLowerCase().includes(this.state.searchfield.toLowerCase());\r\n\t\t})\r\n\r\n\t\tif(this.state.robots.length === 0){\r\n\t\t\treturn <h1 className = 'tc f1'>Loading...</h1>\r\n\t\t}\r\n\t\telse{\r\n\t\t\treturn (\r\n\t\t\t\t<div className = 'tc'>\r\n\t\t\t\t<h1 className = 'f1'>RoboFriends</h1>\r\n\t\t\t\t<Searchbox searchChange = {this.onSearchChange}/>\r\n\t\t\t\t<Scroll>\r\n\t\t\t\t<CardList robots = { filteredRobots } />\r\n\t\t\t\t</Scroll>\r\n\t\t\t\t</div>\r\n\t\t\t);\r\n\r\n\t\t}\r\n\r\n\t\t\r\n\t}\t\r\n}\r\n\r\nexport default App;\r\n\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\n\nimport 'tachyons';\n\nimport App from './containers/App';\n\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n<App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}